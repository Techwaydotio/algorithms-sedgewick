{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Solutions to Algorithms Forth Edition \u00b6 Getting Started \u00b6 This website contains nearly complete solutions to the textbook - Algorithms, 4th Edition , published by Robert Sedgewick and Kevin Wayne. I hope to organize solutions to help people and myself study algorithms. By using Markdown (.md) files, this page is much more readable on portable devices. How I Generate the Website? \u00b6 I use the static site generator MkDocs and the theme Material to build this website. We use KaTeX for rendering math expressions, which is fast and beautiful. License \u00b6 Licensed under the CC0 1.0 Universal (CC0 1.0) .","title":"Preface"},{"location":"#solutions-to-algorithms-forth-edition","text":"","title":"Solutions to Algorithms Forth Edition"},{"location":"#getting-started","text":"This website contains nearly complete solutions to the textbook - Algorithms, 4th Edition , published by Robert Sedgewick and Kevin Wayne. I hope to organize solutions to help people and myself study algorithms. By using Markdown (.md) files, this page is much more readable on portable devices.","title":"Getting Started"},{"location":"#how-i-generate-the-website","text":"I use the static site generator MkDocs and the theme Material to build this website. We use KaTeX for rendering math expressions, which is fast and beautiful.","title":"How I Generate the Website?"},{"location":"#license","text":"Licensed under the CC0 1.0 Universal (CC0 1.0) .","title":"License"},{"location":"Chap01/1.1/","text":"1.1.1 \u00b6 Give the value of each of the following expressions: a. ( 0 + 15 ) / 2 b. 2.0e-6 * 100000000.1 c. true && false || true && true a. jshell> (0 + 15) / 2 $1 ==> 7 b. jshell> 2.0e-6 * 100000000.1 $2 ==> 200.0000002 c. jshell> true && false || true && true $3 ==> true 1.1.2 \u00b6 Give the type and value of each of the following expressions: a. (1 + 2.236)/2 b. 1 + 2 + 3 + 4.0 c. 4.1 >= 4 d. 1 + 2 + \"3\" a. jshell> (1 + 2.236)/2 $1 ==> 1.618 jshell> ((Object)1.618).getClass().getName() $2 ==> \"java.lang.Double\" b. jshell> 1 + 2 + 3 + 4.0 $3 ==> 10.0 // Double c. jshell> 4.1 >= 4 $4 ==> true // Boolean d. jshell> 1 + 2 + \"3\" $5 ==> \"33\" 1.1.3 \u00b6 Write a program that takes three integer command-line arguments and prints equal if all three are equal, and not equal otherwise. public static void main ( String [] args ) { int first = Integer . parseInt ( args [ 0 ] ); int second = Integer . parseInt ( args [ 1 ] ); int third = Integer . parseInt ( args [ 2 ] ); if ( first == second && second == third ) { System . out . println ( \"equal\" ); } else { System . out . println ( \"not equal\" ); } } 1.1.4 \u00b6 What (if anything) is wrong with each of the following statements? a. if (a > b) then c = 0; b. if a > b { c = 0; } c. if (a > b) c = 0; d. if (a > b) c = 0 else b = 0; a. The programs does not compile. We are not allowed to assign a variable in the | Error: | variable declaration not allowed here | if (a > b) then c = 0; | ^---------^ b. The program fails to compile. | Error: | '(' expected | if a > b { c = 0; } | ^ | Error: | ')' expected | if a > b { c = 0; } | ^ c. The problem compiles. d. The problem does not compile. It's missing a semicolon; jshell> if (a > b) c = 0 else b = 0; | Error: | ';' expected | if (a > b) c = 0 else b = 0; | 1.1.5 \u00b6 Write a code fragment that prints true if the double variables x and y are both strictly between 0 and 1 and false otherwise. static boolean areBetween0and1 ( double x , double y ) { return isBetween0and1 ( x ) && isBetween0and1 ( y ); } static boolean isBetween0and1 ( double x ) { if ( x > 0 && x < 1 ) { return true ; } return false ;","title":"1.1   Programming Model"},{"location":"Chap01/1.1/#111","text":"Give the value of each of the following expressions: a. ( 0 + 15 ) / 2 b. 2.0e-6 * 100000000.1 c. true && false || true && true a. jshell> (0 + 15) / 2 $1 ==> 7 b. jshell> 2.0e-6 * 100000000.1 $2 ==> 200.0000002 c. jshell> true && false || true && true $3 ==> true","title":"1.1.1"},{"location":"Chap01/1.1/#112","text":"Give the type and value of each of the following expressions: a. (1 + 2.236)/2 b. 1 + 2 + 3 + 4.0 c. 4.1 >= 4 d. 1 + 2 + \"3\" a. jshell> (1 + 2.236)/2 $1 ==> 1.618 jshell> ((Object)1.618).getClass().getName() $2 ==> \"java.lang.Double\" b. jshell> 1 + 2 + 3 + 4.0 $3 ==> 10.0 // Double c. jshell> 4.1 >= 4 $4 ==> true // Boolean d. jshell> 1 + 2 + \"3\" $5 ==> \"33\"","title":"1.1.2"},{"location":"Chap01/1.1/#113","text":"Write a program that takes three integer command-line arguments and prints equal if all three are equal, and not equal otherwise. public static void main ( String [] args ) { int first = Integer . parseInt ( args [ 0 ] ); int second = Integer . parseInt ( args [ 1 ] ); int third = Integer . parseInt ( args [ 2 ] ); if ( first == second && second == third ) { System . out . println ( \"equal\" ); } else { System . out . println ( \"not equal\" ); } }","title":"1.1.3"},{"location":"Chap01/1.1/#114","text":"What (if anything) is wrong with each of the following statements? a. if (a > b) then c = 0; b. if a > b { c = 0; } c. if (a > b) c = 0; d. if (a > b) c = 0 else b = 0; a. The programs does not compile. We are not allowed to assign a variable in the | Error: | variable declaration not allowed here | if (a > b) then c = 0; | ^---------^ b. The program fails to compile. | Error: | '(' expected | if a > b { c = 0; } | ^ | Error: | ')' expected | if a > b { c = 0; } | ^ c. The problem compiles. d. The problem does not compile. It's missing a semicolon; jshell> if (a > b) c = 0 else b = 0; | Error: | ';' expected | if (a > b) c = 0 else b = 0; |","title":"1.1.4"},{"location":"Chap01/1.1/#115","text":"Write a code fragment that prints true if the double variables x and y are both strictly between 0 and 1 and false otherwise. static boolean areBetween0and1 ( double x , double y ) { return isBetween0and1 ( x ) && isBetween0and1 ( y ); } static boolean isBetween0and1 ( double x ) { if ( x > 0 && x < 1 ) { return true ; } return false ;","title":"1.1.5"},{"location":"Chap01/1.2/","text":"","title":"1.2   Data Abstraction"},{"location":"Chap01/1.3/","text":"","title":"1.3   Bags, Queues, and Stacks"},{"location":"Chap01/1.4/","text":"","title":"1.4   Analysis of Algorithms"},{"location":"Chap01/1.5/","text":"","title":"1.5   Case Study - Union-Find"}]}